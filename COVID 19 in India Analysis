{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"<a href=\"https://colab.research.google.com/github/slyofzero/COVID-19-in-India-Analysis/blob/main/COVID_19_in_India.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>","metadata":{"id":"view-in-github"}},{"cell_type":"markdown","source":"#AIM -\n\nTo analyse the COVID-19 pandemic in India.\n\n---","metadata":{"id":"PWQZNcHCbUkI"}},{"cell_type":"markdown","source":"#Dataset\n\nThe dataset I'll be using for this notebook can be found here - https://www.kaggle.com/datasets/sudalairajkumar/covid19-in-india\n\nLet's first load the dataset using the Kaggle API.\n\n*(The code cells below can only be used if you are running this code on Google Colab. Check out [this](https://www.analyticsvidhya.com/blog/2021/06/how-to-load-kaggle-datasets-directly-into-google-colab/) article for better understanding. If you are using any other type of Jupyter notebook, please find other ways to load the data.)*","metadata":{"id":"fWKATntwcpZo"}},{"cell_type":"code","source":"# # Uncomment this code and run it only if you want to mount your Google Drive to go with the Kaggle API method. (Only works with Google Colab)\n# from google.colab import drive\n# drive.mount('/content/drive')","metadata":{"id":"ApNceD7OdqDi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# # Uncomment this code and run it only if you have Mounted Google Drive to Colab and have the Kaggle API Key stored in it. (Only works with Google Colab)\n\n# !mkdir ~/.kaggle\n# !cp [Drive location of the API key] ~/.kaggle/kaggle.json\n# !kaggle datasets download -d [name of the dataset]","metadata":{"id":"EJ_-JihFdwz6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# # Uncomment this code and run it only if you have Mounted Google Drive to Colab and have the Kaggle API Key stored in it. (Only works with Google Colab)\n\n# !unzip [location of the dataset's zip file]","metadata":{"id":"UDmVaq0pdzAU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{"id":"YhrbrUq_vBbH"}},{"cell_type":"markdown","source":"#COVID-19\n\nThe COVID-19 pandemic, also known as the coronavirus pandemic, is an ongoing global pandemic of coronavirus disease 2019 (COVID-19) caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). \n\nThe novel virus was first identified from an outbreak in Wuhan, China, in December 2019. Attempts to contain it there failed, allowing the virus to spread worldwide. \n\nThe World Health Organization (WHO) declared a Public Health Emergency of International Concern on 30 January 2020 and a pandemic on 11 March 2020. As of 20 April 2022, the pandemic had caused more than 506 million cases and 6.2 million deaths across the whole world, making it one of the deadliest in history.\n\n---","metadata":{"id":"ntIH2RsMfAqw"}},{"cell_type":"markdown","source":"#COVID-19 in India\n\nIndia being the 2nd most populous country in the whole world had a huge rise in COVID-19 cases making it the second worst affected country in the whole world only after USA.\n\nLet's analyse the trends in COVID-19 cases in India.","metadata":{"id":"wCqshM4elr2k"}},{"cell_type":"code","source":"!pip install chart_studio","metadata":{"id":"f-nAlDqUPJAW","outputId":"d0056744-9413-4e89-df4f-abd990dc7630"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Importing the neccesary modules.\nimport pandas as pd\nimport plotly.graph_objects as go\n\nimport chart_studio.plotly as py\nimport chart_studio.tools as tls\ntls.set_credentials_file(username = \"sly.of.zero\", api_key = \"U59KOk5M8g4CgzgeOWBR\")","metadata":{"id":"cD4hhYkaHxLy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Loading the dataset.\ncovid_df = pd.read_csv(\"/content/covid_19_india.csv\")\ncovid_df.head()","metadata":{"id":"0I_mLegzH1gE","outputId":"b03e6bb5-cf8a-437d-dfeb-484d8205c9dd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now that we have the whole dataset, let's check for any null values.","metadata":{"id":"iRIqqstKnufH"}},{"cell_type":"code","source":"# Checking for null values.\ncovid_df.info()","metadata":{"id":"k2wzzB7uH4zn","outputId":"4431583b-856b-4432-8eda-3a35a6149bd5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"For our analysis the `Sno` and `Time` columns are pretty useless, so let's drop them.","metadata":{"id":"qgajkUovn6G5"}},{"cell_type":"code","source":"# Dropping the Sno and Time columns.\ncovid_df.drop(columns = [\"Sno\", \"Time\"], inplace = True)","metadata":{"id":"bqFcCt4qrJok"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking all the State or Union Territory names in the State/UnionTerritory columns.\nstates = covid_df[\"State/UnionTerritory\"].unique()\nstates.sort()\nstates","metadata":{"id":"4LjHsiSRrVEQ","outputId":"76677ce5-ffbb-4501-cc47-4082f52d0ab0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"As you can see there are a few incorrect names like \"**Bihar*****\", \"**Himanchal Pradesh**\", and \"**Unassigned**\" in the `State/UnionTerritory` column. So let's fix them.","metadata":{"id":"TwAZIjqWoJte"}},{"cell_type":"code","source":"# Replacing the incorrect values with the correct ones.\nfor index in covid_df.index:\n  if \"*\" in covid_df.loc[index, \"State/UnionTerritory\"]:\n    covid_df.loc[index, \"State/UnionTerritory\"] = covid_df.loc[index, \"State/UnionTerritory\"].replace(\"*\", \"\")\n\ncovid_df[\"State/UnionTerritory\"] = covid_df[\"State/UnionTerritory\"].replace({\n    \"Karanataka\": \"Karnataka\",\n    \"Telangana\": \"Telengana\",\n    \"Himanchal Pradesh\": \"Himachal Pradesh\",\n    \"Dadra and Nagar Haveli\": \"Dadra and Nagar Haveli and Daman and Diu\",\n    \"Daman & Diu\": \"Dadra and Nagar Haveli and Daman and Diu\"\n    })\n\ninvalid_states = [\"Cases being reassigned to states\", \"Unassigned\"]\n\nfor invalid_state in invalid_states:\n  invalid_state_index = covid_df.loc[covid_df[\"State/UnionTerritory\"] == invalid_state, :].index\n  covid_df.drop(index = invalid_state_index, inplace = True)","metadata":{"id":"WikRYJ8-sC_H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking if the incorrect values were fixed or not.\nstates = covid_df[\"State/UnionTerritory\"].unique()\nstates.sort()\nstates","metadata":{"id":"Li5MZaJXHPNA","outputId":"cd76c383-4a37-438e-e408-1df1c19e3a01"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now that we have the correct State and Union Territories names in the `State/UnionTerritory` column, let's get the total number of cases for each state on each date.","metadata":{"id":"h_ANwSpzqHy5"}},{"cell_type":"code","source":"# Getting the total number of cases for each state on each date.\ncovid_df = covid_df.groupby([\"State/UnionTerritory\", \"Date\"], as_index = False).sum()","metadata":{"id":"56sdh4Os0ePt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Converting the Date column to datetime.\ncovid_df[\"Date\"] = pd.to_datetime(covid_df[\"Date\"])\ncovid_df.sort_values(by = [\"State/UnionTerritory\", \"Date\"], inplace = True)","metadata":{"id":"s49HC7MG9Aaw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Printing the new data.\ncovid_df","metadata":{"id":"6zkT6A6zqhdn","outputId":"4e28e00e-329f-487e-89a8-298ff13ff51a"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"As you can see, the data we have here shows the total number of cases till that date. For our analysis we need the total number of **new cases** each day. For this we'll have to subtract the total number of cases on the previous day from the total number of cases on the current day.","metadata":{"id":"F_GrIUj7qfrg"}},{"cell_type":"code","source":"# Getting the number of new cases we had each day. \ngrouped_df = covid_df.groupby(\"State/UnionTerritory\")\ndaily_cases_df = pd.DataFrame()\n\nfor state in covid_df[\"State/UnionTerritory\"].unique():\n  group = grouped_df.get_group(state)\n  cases_group = group.iloc[:, 2:] - group.shift(1).iloc[:, 2:]\n  cases_group.iloc[0, :] = group.iloc[0, 2:]\n  group = pd.concat([group.iloc[:, :2], cases_group], axis = 1)\n  \n  daily_cases_df = pd.concat([daily_cases_df, group])\n\ndaily_cases_df","metadata":{"id":"smSkNQVmn9tD","outputId":"25aab5ea-5da0-46a5-daf2-7c8d64a50df2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Getting the deescription of the data in the table.\ndaily_cases_df.describe()","metadata":{"id":"ckIvhn-vtDGb","outputId":"0e12af6d-333a-4a59-e25a-74e6a826e5fb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Here we have a few negative values in the columns `Cured`, `Deaths`, and `Confirmed`. It doesn't make any sense that the total number of daily new cases are negative so let's just drop those rows.","metadata":{"id":"Lmq5vgBbtOar"}},{"cell_type":"code","source":"# Dropping the rows with negative values for daily cases.\nfor case_data in [\"Cured\", \"Deaths\", \"Confirmed\"]:\n  invalid_indices = daily_cases_df[daily_cases_df[case_data] < 0].index\n  daily_cases_df.drop(index = invalid_indices, inplace = True)","metadata":{"id":"BxfWwQgqT7xW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking if the invalid rows were dropped.\ndaily_cases_df.describe()","metadata":{"id":"X7DxhSDLtnEv","outputId":"6f53b635-95c9-4a3b-b3ae-fa1b20b1456f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now that the rows with invalid values have been removed, let's add two new columns to the dataframe with the \"Month\" and \"Year\" values, and group the data based upon the years.","metadata":{"id":"6WwLfNPJuJWG"}},{"cell_type":"code","source":"# Adding month and year values to the dataframe.\ndaily_cases_df.iloc[:, 2:] = daily_cases_df.iloc[:, 2:].astype(int)\ndaily_cases_df[\"Month\"] = daily_cases_df[\"Date\"].dt.month\ndaily_cases_df[\"Year\"] = daily_cases_df[\"Date\"].dt.year\ndaily_cases_df.head()","metadata":{"id":"4twDR2Z3pBRT","outputId":"efcae11e-e07a-4ea3-bdf6-5e4e642f8d02"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Grouping the data based upon the years.\ndaily_cases_grouped_year_df = daily_cases_df.groupby([\"Year\"])\ngrouped_by_years_dataframes = [daily_cases_grouped_year_df.get_group(year) for year in daily_cases_df[\"Year\"].unique()]","metadata":{"id":"M8xqRhBpqUUP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now let's find the total number of cases India got on a daily.","metadata":{"id":"NK-eVp2uvzOg"}},{"cell_type":"code","source":"# Finding the total number of cases for each date for each grouped dataframe.\ntotal_cases_per_year = []\n\nfor grouped_df in grouped_by_years_dataframes:\n  total_cases_df = grouped_df.groupby(\"Date\", as_index = False).sum().iloc[:, :-2]\n  total_cases_df[\"Month\"] = total_cases_df[\"Date\"].dt.month\n  total_cases_df[\"Year\"] = total_cases_df[\"Date\"].dt.year\n\n  total_cases_per_year.append(total_cases_df)\n\ntotal_cases_india_df = pd.concat(total_cases_per_year).reset_index(drop = True)","metadata":{"id":"GEOJb5C4ry2a"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now let's plot the daily new cases per year for the whole country.","metadata":{"id":"6hPmQzuzuqPp"}},{"cell_type":"code","source":"# Plotting the daily new cases for each year on a graph.\nfor dataframe in total_cases_per_year:\n  year = dataframe.loc[0, \"Year\"]\n\n  fig = go.Figure()\n\n  fig.add_traces(go.Scatter(\n      x = dataframe[\"Date\"],\n      y = dataframe[\"Confirmed\"],\n      mode = \"lines\",\n      name = \"Confirmed Cases\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = dataframe[\"Date\"],\n      y = dataframe[\"Deaths\"],\n      mode = \"lines\",\n      name = \"Deaths due to COVID-19\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = dataframe[\"Date\"],\n      y = dataframe[\"Cured\"],\n      mode = \"lines\",\n      name = \"Recovered\"\n  ))\n\n  fig.update_layout(\n      title = f\"Daily COVID-19 cases in India in {year}.\"\n  )\n\n  fig.show()","metadata":{"id":"4-646_YBKF1r","outputId":"346c7119-2e6a-45c6-cc99-20715e3d4b43"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plotting all the daily new cases for India.\nfig = go.Figure()\n\nfig.add_traces(go.Scatter(\n    x = total_cases_india_df[\"Date\"],\n    y = total_cases_india_df[\"Confirmed\"],\n    mode = \"lines\",\n    name = \"Confirmed Cases\"\n))\n\nfig.add_traces(go.Scatter(\n    x = total_cases_india_df[\"Date\"],\n    y = total_cases_india_df[\"Deaths\"],\n    mode = \"lines\",\n    name = \"Deaths due to COVID-19\"\n))\n\nfig.add_traces(go.Scatter(\n    x = total_cases_india_df[\"Date\"],\n    y = total_cases_india_df[\"Cured\"],\n    mode = \"lines\",\n    name = \"Recovered\"\n))\n\nfig.update_layout(\n    title = f\"Daily COVID-19 cases in India.\"\n)\n\nfig.show()","metadata":{"id":"-ZAask3y0NXD","outputId":"ae0063dc-94d7-41be-b2e4-5499ffd9092c"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From the graphs above it's clear that India saw two wavs of COVID-19. One in the year of 2020 and the other, more severe one, in the year of 2021.\n\nLet's find the maximum number of `Confirmed` cases, `Deaths` and `Cured` cases for both the years.","metadata":{"id":"d8H9liIK3Iw3"}},{"cell_type":"code","source":"# Maximum cases, deaths and recoveries for both years.\nfor dataframe in total_cases_per_year:\n  max_cases_index = dataframe[\"Confirmed\"].idxmax()\n  max_deaths_index = dataframe[\"Deaths\"].idxmax()\n  max_cured_index = dataframe[\"Cured\"].idxmax()\n  year = dataframe.loc[0, \"Year\"]\n\n  max_cases = dataframe.loc[max_cases_index, \"Confirmed\"]\n  max_cases_date = dataframe.loc[max_cases_index, \"Date\"].date()\n\n  max_deaths = dataframe.loc[max_deaths_index, \"Deaths\"]\n  max_deaths_date = dataframe.loc[max_deaths_index, \"Date\"].date()\n\n  max_cured = dataframe.loc[max_cured_index, \"Cured\"]\n  max_cured_date = dataframe.loc[max_cured_index, \"Date\"].date()\n\n  print(f\"\"\"For the year {year} ->\n  \\tMaximum Cases = {max_cases} on {max_cases_date}\n  \\tMaxiumum Deaths = {max_deaths} on {max_deaths_date}\n  \\tMaxiumum Cured = {max_cured} on {max_cured_date}\\n\"\"\")","metadata":{"id":"DiY6uf5zP1bq","outputId":"d5a42b5c-a8fd-49a4-f721-7dca7501f893"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Total cases, deaths and recoveries for both years.\nfor dataframe in total_cases_per_year:\n  total_data = dataframe[[\"Cured\", \"Deaths\", \"Confirmed\"]].sum()\n  year = dataframe.loc[0, \"Year\"]\n\n  total_cases = total_data[\"Confirmed\"]\n  total_deaths = total_data[\"Deaths\"]\n  total_cured = total_data[\"Cured\"]\n\n  print(f\"\"\"For the year {year} ->\n  \\tTotal Cases = {total_cases}\n  \\tTotal Deaths = {total_deaths}\n  \\tTotal Cured = {total_cured}\\n\"\"\")","metadata":{"id":"yYxdDHESF80F","outputId":"a856724e-5c8e-4ba0-d5d0-fe474462baa7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From the data above, it's evident that the first wave of COVID-19 in India started in May 2020, reached it's peak in September 2020, and died off by Jan 2021. So in total, it had its effects for a total of 9 months.\n\nThe second wave started off in the March 2021, reached it's peak in May 2021, and died off by June/July 2021. In total it had its effects for only 4 months and yet was twice as deadly as the previous wave.","metadata":{"id":"l6UavzXH1eh0"}},{"cell_type":"markdown","source":"Let's check the recovery rate for both years.","metadata":{"id":"RMdLa-OUHut_"}},{"cell_type":"code","source":"# Calculating the recovery rate for the whole country for both years.\nfor dataframe in total_cases_per_year:\n  recovery_rate = round(dataframe[\"Cured\"].sum() / dataframe[\"Confirmed\"].sum() * 100, 2)\n  year = dataframe.loc[0, \"Year\"]\n\n  print(f\"For the year {year} the recovery rate was {recovery_rate}%.\")","metadata":{"id":"RpYIDvOf4bH4","outputId":"4a92b419-e650-49c2-922d-5fe0a14a6dc4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"For both years India had a recovery rate of over 95%! That's really impressive! The major reasons for this high recovery rate can be quick government action, India's climate, and innate immunity of Indians. But a lot of this can be a direct contribution of the type of lifestyle Indians live. \n\nIndia is the birthplace of yoga and ayurveda, and the pandemic made many people revert back to their ancient roots. Yoga led to a healthy body while ayurveda led to a healthy diet. In India alcohol, smoking, and meat eating is far more uncommon compared to many western nations, mostly because these things are considered a \"taboo\" by the culture itself. This too helped many people in staying a bit more healthy.\n\n---","metadata":{"id":"ll5Z2hTQ4-bz"}},{"cell_type":"markdown","source":"#COVID-19 in Indian States\nNow that we have the daily COVID-19 cases for the whole country plotted on a graph, let's do the same for each state.\n\nIndian States are unique in many ways. Each has a different culture, population, type of government, and health care facilities. Some states are more connected to others, while some are very isolated. This diversity can mean that each state might have been affected differently during the COVID-19 pandemic.\n\nSo let's try and analyse this.","metadata":{"id":"9D4Gn8g2wssH"}},{"cell_type":"code","source":"# Daily new COVID-19 cases for each state.\ndaily_state_cases_grouped_df = daily_cases_df.groupby(\"State/UnionTerritory\", as_index = False)","metadata":{"id":"S1mcKEq2S7UG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plotting the daily COVID-19 cases for each state.\nfor state in daily_cases_df[\"State/UnionTerritory\"].unique():\n  daily_state_cases_df = daily_state_cases_grouped_df.get_group(state)\n  \n  fig = go.Figure()\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Confirmed\"],\n      mode = \"lines\",\n      name = \"Confirmed Cases\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Deaths\"],\n      mode = \"lines\",\n      name = \"Deaths due to COVID-19\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Cured\"],\n      mode = \"lines\",\n      name = \"Recovered\"\n  ))\n\n  fig.update_layout(\n      title = f\"Daily COVID-19 cases in {state}.\"\n  )\n\n  fig.show()","metadata":{"id":"ZIQOtOquw2Eh","outputId":"590d6062-032a-4e6d-9c1e-438484daa66a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Getting the total number of cases in each State or Union Territory.\ntotal_states_cases_df = daily_state_cases_grouped_df.sum()","metadata":{"id":"yYxh6HNUya9K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plotting the total number of cases in each State or Union Territory.\nfig = go.Figure()\n\nfig.add_traces(go.Bar(\n    x = total_states_cases_df[\"State/UnionTerritory\"],\n    y = total_states_cases_df[\"Confirmed\"]\n))\n\nfig.update_layout(\n    title = \"Total Number of COVID-19 cases in each state.\"\n)\n\nfig.show()","metadata":{"id":"hCaHhPTey5sx","outputId":"5cb03bb9-3a57-44a3-d8ab-d44dbd38609e"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From these graphs it's evident that different regions of India were affected differently. Maharashtra saw the most number of COVID-19 cases during the two years mostly because of the hgih population of the state.\n\nOne trend I see is that the North-Eastern states still had a lot of cases in June and July even though India as a whole saw a massive decrease.\n\nLet's plot the graphs for these states in isolation.","metadata":{"id":"sSyehT1wNP7X"}},{"cell_type":"code","source":"# Plotting the total number of cases in each North-Eastern State.\nnorth_eastern_states = ['Arunachal Pradesh', \n                        'Assam',\n                        'Manipur', \n                        'Meghalaya', \n                        'Mizoram',\n                        'Nagaland',\n                        'Sikkim']\n\nfor state in north_eastern_states:\n  daily_state_cases_df = daily_state_cases_grouped_df.get_group(state)\n  \n  fig = go.Figure()\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Confirmed\"],\n      mode = \"lines\",\n      name = \"Confirmed Cases\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Deaths\"],\n      mode = \"lines\",\n      name = \"Deaths due to COVID-19\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Cured\"],\n      mode = \"lines\",\n      name = \"Recovered\"\n  ))\n\n  fig.update_layout(\n      title = f\"Daily COVID-19 cases in {state}.\"\n  )\n\n  fig.show()","metadata":{"id":"8AoGL5-kRN61","outputId":"356e6532-a480-4612-916a-b1f710feedd0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"As you can see, the number of COVID-19 cases remained fairly high for the North-Eastern states even in the months of June and July when the cases saw a huge decrease in the whole country.\n\nA big reason for this might be that these states are in a lot more isolation compared to other states like Uttar Pradesh and Maharashtra. This isolation is because of the terrain of the region. These states are located in a much more hilly area compared to the rest of the country, which makes them a lot more inaccessible. Because of this development and external help from other states was much slower and much more difficult.\n\n---","metadata":{"id":"CJdgW2fVNZRg"}},{"cell_type":"markdown","source":"#Waves of COVID-19\n\nIn India there were primarily two waves of COVID-19 that affected it the most. The first wave that peaked in September of 2020, and then second wave that peaked in the May of 2021. The second wave was much more deadly than the first wave for a multitude of reasons.\n\nThe three big reasons that are brought up a lot are -\n\n1. A stronger variant of COVID-19.\n2. Decline of the first wave.\n3. Legislative elections in 4 states and 1 Union Territory of India.","metadata":{"id":"Qxvn2bc0UY7K"}},{"cell_type":"markdown","source":"##A stronger variant of COVID-19\n\nThe first COVID-19 wave in India was caused by the α (alpha) variant. But in late 2020, a stronger variant of COVID-19 (also known as the δ (delta) variant) was first detected in India and is thought to be partly responsible for the second deadly wave of COVID-19 in India. This variant then spread to the whole world bringing in a global second wave of COVID-19.\n\nThis variant had mutations which made it more transmissible and more resistant to anti-bodies. It is considered 40-60% more transmissible than the α variant and almost two times as transmissible as the original Wuhan strain.\n\n","metadata":{"id":"Xx9mzzudJ4Qb"}},{"cell_type":"markdown","source":"##Decline of the first wave\n\nThe first COVID-19 wave in India reached it's peak in September 2020, and then gradually declined by January of 2021.","metadata":{"id":"pYCOrZiuYm-Z"}},{"cell_type":"code","source":"# Total number of COVID-19 cases in February 2021.\ndaily_cases_india_month_grouped_df = total_cases_india_df.groupby([\"Month\", \"Year\"])\nfeb_2021_cases_india = int(daily_cases_india_month_grouped_df.get_group((2, 2021))[\"Confirmed\"].sum())\nsep_2020_cases_india = int(daily_cases_india_month_grouped_df.get_group((9, 2020))[\"Confirmed\"].sum())\n\nprint(f\"Cases in February 2021 = {feb_2021_cases_india}\")\nprint(f\"Cases in September 2020 = {sep_2020_cases_india}\")","metadata":{"id":"GT6qGhdJcZHw","outputId":"af405d70-68a6-4126-c289-06b5ec04911c"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"When the first wave of COVID-19 hit India, everyone got alarmed and took a lot of precautions to avoid spreading the virus. And this initiative was kind of a success because -\n1. The COVID-19 cases for the first wave saw a gradual increase instead of a steep one\n2. The cases didn't reach as high as the second wave.\n\nBut in February of 2021, India only had a total of around 372k cases. This might sound like a huge number but if you compare it to the peak of the first wave in September 2020, which had a total of 2.6 million cases you can probably say that the first wave was nearly dead by February 2021.\n\nAnd that's exactly what most of the people in India and the government thought. Because of the drastic decline in the number of COVID-19 cases, people probably got a little too comfortable with the pandemic. This led to not taking the safety precautions seriously, which in turn led to mass spread of the virus. So when a new and stronger variant spread throughout the country, it had worse effects than the first wave.\n\nBut this reason by itself doesn't seem to be the sole reason for such a big second wave. There must have been some catalyst. And this catalyst was the Legislative elections of 2021.","metadata":{"id":"J4mwcgIVdaXy"}},{"cell_type":"markdown","source":"##Legislative Elections\n\nIn the year 2021, India had Legislative elections in 4 states and 1 Union Territory in the months of March and April. And can you guess in which months did the second wave of COVID-19 began? March and April...\n\nThe elections were in the states of Assam, Kerala, Tamil Nadu, West Bengal and Puducherry. The combined population of all 5 regions in 2021 stands at around 250 million, about 1/5$^{th}$ of India's population.\n\nLet's plot the graphs of COVID-19 cases for these 5 states and union territory.","metadata":{"id":"L9p6UF1tgyUj"}},{"cell_type":"code","source":"# Plotting the total number of cases in each state or union territory with legislative elections.\nnorth_eastern_states = ['Assam',\n                        'Kerala', \n                        'Tamil Nadu', \n                        'West Bengal',\n                        'Puducherry'\n                        ]\n\nfor state in north_eastern_states:\n  daily_state_cases_df = daily_state_cases_grouped_df.get_group(state)\n  \n  fig = go.Figure()\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Confirmed\"],\n      mode = \"lines\",\n      name = \"Confirmed Cases\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Deaths\"],\n      mode = \"lines\",\n      name = \"Deaths due to COVID-19\"\n  ))\n\n  fig.add_traces(go.Scatter(\n      x = daily_state_cases_df[\"Date\"],\n      y = daily_state_cases_df[\"Cured\"],\n      mode = \"lines\",\n      name = \"Recovered\"\n  ))\n\n  fig.update_layout(\n      title = f\"Daily COVID-19 cases in {state}.\"\n  )\n\n  fig.show()","metadata":{"id":"mmErgeu1ic_t","outputId":"5cbbbae6-8d6d-4352-c592-9b4cac91d0d0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Legsilative elections provide an ideal method for the virus' transmission, as they require a huge part of the population's direct participation. Election rallies, campaigns, and election day, all attract a massive crowd of people for all sorts of activities. \n\nDue to these elections, the COVID-19 protocols were lifted to allow for election campaigning and economic activities. Because of this India opened up a bit in a time it shouldn't have. The spread of a new strain added to this. One thing led to another and India ended up having another wave of COVID-19.\n\n---","metadata":{"id":"rvuxZJmpkXGa"}},{"cell_type":"markdown","source":"#END OF THE NOTEBOOK","metadata":{"id":"cuyIgqkRm4Bg"}}]}
